// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.TicTacToe.Database;

#nullable disable

namespace WebApi.TicTacToe.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230319092314_add migration")]
    partial class addmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApi.TicTacToe.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("HostId")
                        .HasColumnType("int");

                    b.Property<string>("NameRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusRoom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HostId")
                        .IsUnique()
                        .HasFilter("[HostId] IS NOT NULL");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("WebApi.TicTacToe.Models.RoomPlayers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique()
                        .HasFilter("[PlayerId] IS NOT NULL");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomPlayers");
                });

            modelBuilder.Entity("WebApi.TicTacToe.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApi.TicTacToe.Models.Room", b =>
                {
                    b.HasOne("WebApi.TicTacToe.Models.User", "Host")
                        .WithOne("Room")
                        .HasForeignKey("WebApi.TicTacToe.Models.Room", "HostId");

                    b.Navigation("Host");
                });

            modelBuilder.Entity("WebApi.TicTacToe.Models.RoomPlayers", b =>
                {
                    b.HasOne("WebApi.TicTacToe.Models.User", "Player")
                        .WithOne("RoomPlayer")
                        .HasForeignKey("WebApi.TicTacToe.Models.RoomPlayers", "PlayerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WebApi.TicTacToe.Models.Room", "Room")
                        .WithMany("RoomPlayers")
                        .HasForeignKey("RoomId");

                    b.Navigation("Player");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("WebApi.TicTacToe.Models.Room", b =>
                {
                    b.Navigation("RoomPlayers");
                });

            modelBuilder.Entity("WebApi.TicTacToe.Models.User", b =>
                {
                    b.Navigation("Room");

                    b.Navigation("RoomPlayer");
                });
#pragma warning restore 612, 618
        }
    }
}
